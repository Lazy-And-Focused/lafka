# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI
run-name: Check code by ${{ github.actor }} from '${{ github.event.head_commit.message }}''

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main", "dev"]

permissions:
  contents: write

jobs:
  backend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: 10.4.0

      - uses: actions/setup-node@v4
        name: Node.js ⇒ 20.x
        with:
          node-version: 20.x
          cache: "pnpm"

      - name: pnpm ⇒ Install dependencies
        run: pnpm install

      - name: "[BACKEND] Eslint ⇒ Scan and fix"
        run: pnpm --filter backend run lint
        continue-on-error: false

      - name: Save Changes ⇒ Commit formatted code
        run: |
          git config --global user.name '${{ github.event.head_commit.author.name }}'
          git config --global user.email '${{ github.event.head_commit.author.username }}@${{ github.event.head_commit.author.email }}'
          git add .
          git commit -m '${{ github.event.head_commit.message }} (formatted ~~ backend)'
          git push
        continue-on-error: true

  frontend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: 10.4.0

      - uses: actions/setup-node@v4
        name: Node.js ⇒ 20.x
        with:
          node-version: 20.x
          cache: "pnpm"

      - name: pnpm ⇒ Install dependencies
        run: pnpm install

      - name: "[FRONTEND] Code Style ⇒ Scan and fix"
        run: |
          pnpm --filter frontend run format
          pnpm --filter frontend run lint
        continue-on-error: false

      - name: Save Changes ⇒ Commit formatted code
        run: |
          git config --global user.name '${{ github.event.head_commit.author.name }}'
          git config --global user.email '${{ github.event.head_commit.author.username }}@${{ github.event.head_commit.author.email }}'
          git add .
          git commit -m '${{ github.event.head_commit.message }} (formatted ~~ frontend)'
          git push
        continue-on-error: true
